rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== 사용자 컬렉션 =====
    match /users/{userId} {
      // 본인만 민감한 필드 수정 가능
      allow read: if true; // 프로필은 공개 읽기 허용
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // 사용자 삭제는 금지
    }
    
    // ===== 친구 요청 컬렉션 =====
    match /friend_requests/{requestId} {
      // 요청 생성: 발신자만 가능, 자기 자신에게 요청 금지
      allow create: if 
        request.auth != null &&
        request.auth.uid == resource.data.fromUid &&
        request.auth.uid != resource.data.toUid &&
        resource.data.status == 'PENDING';
      
      // 요청 읽기: 발신자 또는 수신자만 가능
      allow read: if 
        request.auth != null &&
        (request.auth.uid == resource.data.fromUid || 
         request.auth.uid == resource.data.toUid);
      
      // 요청 업데이트: 상태 전이 규칙 적용
      allow update: if 
        request.auth != null &&
        (
          // PENDING → CANCELED: 발신자만 가능
          (resource.data.status == 'PENDING' && 
           request.resource.data.status == 'CANCELED' &&
           request.auth.uid == resource.data.fromUid) ||
          
          // PENDING → ACCEPTED/REJECTED: 수신자만 가능
          (resource.data.status == 'PENDING' && 
           (request.resource.data.status == 'ACCEPTED' || 
            request.resource.data.status == 'REJECTED') &&
           request.auth.uid == resource.data.toUid)
        );
      
      // 요청 삭제: 금지 (상태 변경으로 처리)
      allow delete: if false;
    }
    
    // ===== 친구 관계 컬렉션 =====
    match /friendships/{pairId} {
      // 읽기: 관계에 포함된 사용자만 가능
      allow read: if 
        request.auth != null &&
        request.auth.uid in resource.data.uids;
      
      // 쓰기: 클라우드 함수만 가능 (보안 강화)
      allow write: if false;
    }
    
    // ===== 차단 컬렉션 =====
    match /blocks/{blockId} {
      // 읽기: 차단한 사용자만 가능
      allow read: if 
        request.auth != null &&
        request.auth.uid == resource.data.blocker;
      
      // 생성/삭제: 차단하는 사용자만 가능
      allow create, delete: if 
        request.auth != null &&
        request.auth.uid == resource.data.blocker;
      
      // 업데이트: 금지
      allow update: if false;
    }
    
    // ===== 기존 컬렉션들 (호환성 유지) =====
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    match /meetups/{meetupId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.hostId;
    }
  }
}
